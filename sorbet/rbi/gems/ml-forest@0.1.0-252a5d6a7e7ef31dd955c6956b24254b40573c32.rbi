# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ml-forest` gem.
# Please instead update this file by running `bin/tapioca gem ml-forest`.

# source://ml-forest//lib/ml/forest/version.rb#3
module Ml; end

# source://ml-forest//lib/ml/forest/version.rb#4
module Ml::Forest
  include ::Node
end

# source://ml-forest//lib/ml/forest.rb#9
class Ml::Forest::Tree
  # @return [Tree] a new instance of Tree
  #
  # source://ml-forest//lib/ml/forest.rb#12
  def initialize(data, forest_helper:, trees_count: T.unsafe(nil)); end

  # source://ml-forest//lib/ml/forest.rb#21
  def evaluate_forest(element); end

  # source://ml-forest//lib/ml/forest.rb#25
  def fit_predict(data, forest_helper:); end

  # Returns the value of attribute forest_helper.
  #
  # source://ml-forest//lib/ml/forest.rb#10
  def forest_helper; end

  # Returns the value of attribute trees.
  #
  # source://ml-forest//lib/ml/forest.rb#10
  def trees; end
end

# source://ml-forest//lib/ml/forest/version.rb#5
Ml::Forest::VERSION = T.let(T.unsafe(nil), String)

module Ml::Service; end
module Ml::Service::Isolation; end

# source://ml-forest//lib/ml/forest/node/node.rb#3
module Node
  class << self
    # source://ml-forest//lib/ml/forest/node/node.rb#5
    def init_from_data(data, forest_helper:); end

    # source://ml-forest//lib/ml/forest/node/node.rb#19
    def walk_nodes(node, element, forest_helper:); end
  end
end

class Node::InNode < ::Data
  def branches; end
  def split_point; end

  # source://ml-forest//lib/ml/forest/node/node.rb#34
  def to_a; end

  # source://ml-forest//lib/ml/forest/node/node.rb#38
  def to_h; end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

class Node::OutNode < ::Data
  def data; end

  # source://ml-forest//lib/ml/forest/node/node.rb#28
  def to_a; end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end
